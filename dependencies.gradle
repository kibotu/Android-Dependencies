ext {
    // refresh gradle dependencies: ./gradlew build --refresh-dependencies

    // sdk and tools
    minSdkVer = 21
    compileSdkVer = 30
    targetSdkVer = 30

    buildToolsVer = '30.0.3'

    // define all versions to facilitate dependency update (=> updating variables here)
    // @see https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib-jdk8
    kotlinVersion = '1.5.30'

    // plugins
    gradleBuildToolsVersion = '4.1.1'
    dexcountGradleVersion = '3.0.0'
    googleGmsVersion = '4.3.10'
    kotlinDokkaVersion = '1.5.0'

    // libs
    activityKtxVersion = '1.0.0'
    androidKtxCoreVersion = '1.3.1'
    androidKtxFragmentVersion = '1.3.0'
    androidKtxCollectionVersion = '1.1.0'
    androidKtxLifecycleViewmodelVersion = '2.3.0'
    kotlinxSerializationVersion = '1.2.2'

    appCompatResourcesVersion = '1.2.0'

    constraintLayoutVersion = '1.1.3'
    conscryptVersion = '2.5.1'

    detektVersion = '1.18.1'

    firebaseCrashlyticsPluginVersion = '2.7.1'
    firebaseCrashlyticsVersion = '18.2.1'

    fragmentKtxVersion = '1.1.0'
    lifecycleVersion = '2.2.0'

    supportMultiDexVersion = '2.0.1'
    supportActivityVersion = '1.0.0'
    supportFragmentVersion = '1.1.0'
    supportAppCompatVersion = '1.2.0'
    supportCompatVersion = '1.3.2'
    supportDesignVersion = '1.2.1'
    supportGridLayoutVersion = '1.0.0'
    supportLeanbackVersion = '1.0.0'
    supportRecyclerviewVersion = '1.1.0'
    supportVectorDrawableVersion = '1.1.0'

    jodaVersion = '2.10.6.1'

    guavaVersion = '30.1-android'
    recyclerviewAnimatorsVersion = '3.0.0'

    okhttp3Version = '4.9.0'
    okhttp3ResponseEchoVersion = '2.3.0'

    tealiumVersion = '5.6.1'
    hawkVersion = '2.0.1'

    awsIotVersion = '2.13.3'
    awsClientVersion = '2.13.3'

    glideVersion = '4.12.0'
    glideTransformationsVersion = '4.3.0'
    mosbyMviVersion = '3.1.1'

    koinVersion = '3.1.2'
    retrofitVersion = '2.9.0'
    retrofitAdapterRxJava2Version = '2.9.0'
    retrofitConverterSerialization = '0.8.0'
    retrofitMockVersion = '2.9.0'
    converterScalarsVersion = '2.9.0'
    converterSimpleXmlVersion = '2.9.0'

    rx2javaVersion = '2.2.17'
    rx2AndroidVersion = '2.1.1'
    rx2KotlinVersion = '2.4.0'

    amazonExoplayerVersion = '2.13.3'
    amazonExoplayerImaExtensionVersion = '2.13.3'

    youboraVersion = '6.7.23'

    timberLoggerVersion = '4.7.1'

    leakcanaryVersion = '2.1'

    // exozetCore alternative source   : "com.exozet:core:",
    exozetCoreVersion = '3.3.0'
    recyclerViewPresenterVersion = '4.3.4'

    loggerVersion = '4.4.3'

    secureStorageVersion = '1.2.4'

    tvProviderVVersion = '1.0.0'
    // this version is NOT compatible with Android 12 (S)
    workManagerKtxVersion = '2.6.0'
    workManagerRx2Version = '2.6.0'

    // testlibs
    junitVersion = '4.13.2'

    jsonAssertVersion = '1.5.0'
    jsonUnitVersion = '2.28.0'
    jsonUnitFluentVersion = '2.28.0'
    robolectricVersion = '4.6.1'
    mockkVersion = '1.12.0'
    truthVersion = 'c1.0.1'
    jodaTimeVersion = '2.10.10'

    // androidTestLibs
    testCoreVersion = '1.4.0'
    testingCoreVersion = '2.1.0'
    testRunnerVersion = '1.4.0'
    testRulesVersion = '1.4.0'
    uiAutomatorVersion = '2.2.0'
    testJUnitVersion = '1.1.2'
    testJUnitKtxVersion = '1.1.2'
    testTruthVersion = '1.4.0'
    truthVersion = '1.1.3'
    espressoVersion = '3.4.0'
    idlingConcurrentVersion = '3.3.0'
    fragmentTestingVersion = '1.1.0-alpha08'

    // androidTestUtilLibs
    orchestratorVersion = '1.4.0'

    VERSION_NAME = 0
    LOG_UTILS = false

    major = 1
    minor = 0
    patch = 0

    VSC_PATH = '0'

    isCi = rootProject.hasProperty("CI") || rootProject.hasProperty("ci") || System.getenv().containsKey("CI")
}

ext.plugin = [
        gradleBuildTools             : "com.android.tools.build:gradle:$gradleBuildToolsVersion",
        kotlinApt                    : "org.jetbrains.kotlin.kapt:org.jetbrains.kotlin.kapt.gradle.plugin:$kotlinVersion",
        kotlinDokka                  : "org.jetbrains.dokka:dokka-gradle-plugin:$kotlinDokkaVersion",
        kotlinGradle                 : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
        kotlinxSerialization         : "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion",
        // static code analysis for kotlin
        detekt                       : "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion",
        dexcountGradle               : "com.getkeepsafe.dexcount:dexcount-gradle-plugin:$dexcountGradleVersion",
        firebaseCrashlyticsGradle    : "com.google.firebase:firebase-crashlytics-gradle:$firebaseCrashlyticsPluginVersion",
        // https://developers.google.com/android/guides/google-services-plugin
        gms                          : "com.google.gms:google-services:$googleGmsVersion"
]

ext.libs = [
        kotlin                            : "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
        kotlinxSerializationJson          : "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerializationVersion",

        // https://developer.android.com/kotlin/ktx#modules
        androidKtxCore                    : "androidx.core:core-ktx:$androidKtxCoreVersion",
        androidKtxFragment                : "androidx.fragment:fragment-ktx:$androidKtxFragmentVersion",
        androidKtxCollection              : "androidx.collection:collection-ktx:$androidKtxCollectionVersion",
        androidKtxLifecycleViewmodel      : "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidKtxLifecycleViewmodelVersion",

        // support libraries

        conscrypt                         : "org.conscrypt:conscrypt-android:$conscryptVersion",

        supportMultidex                   : "androidx.multidex:multidex:$supportMultiDexVersion",
        // https://developer.android.com/jetpack/androidx/releases/activity
        supportActivity                   : "androidx.activity:activity:$supportActivityVersion",
        // https://developer.android.com/jetpack/androidx/releases/fragment
        supportFragment                   : "androidx.fragment:fragment:$supportFragmentVersion",
        // https://developer.android.com/jetpack/androidx/releases/appcompat
        supportAppCompat                  : "androidx.appcompat:appcompat:$supportAppCompatVersion",
        supportGridLayout                 : "androidx.gridlayout:gridlayout:$supportGridLayoutVersion",
        supportRecyclerview               : "androidx.recyclerview:recyclerview:$supportRecyclerviewVersion",
        supportCompat                     : "androidx.core:core:$supportCompatVersion",
        supportDesign                     : "com.google.android.material:material:$supportDesignVersion",
        supportLeanback                   : "androidx.leanback:leanback:$supportLeanbackVersion",
        supportVectorDrawable             : "androidx.vectordrawable:vectordrawable:$supportVectorDrawableVersion",

        fragmentKtx                       : "androidx.fragment:fragment-ktx:$fragmentKtxVersion",
        activityKtx                       : "androidx.activity:activity-ktx:$activityKtxVersion",

        appCompatResources                : "androidx.appcompat:appcompat-resources:$appCompatResourcesVersion",
        constraintLayout                  : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",

        firebaseCrashlytics               : "com.google.firebase:firebase-crashlytics:$firebaseCrashlyticsVersion",

        // architecture components
        // https://developer.android.com/topic/libraries/architecture/adding-components

        lifecycleExtensions               : "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion", // ViewModel and LiveData
        lifecycleLivedataKtx              : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion", // alternatively, just LiveData
        lifecycleRuntimeKtx               : "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion",
        lifecycleCommonJava8              : "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion", // Java8 support for Lifecycles

        joda                              : "net.danlew:android.joda:$jodaVersion",
        guava                             : "com.google.guava:guava:$guavaVersion",
        recyclerviewAnimators             : "jp.wasabeef:recyclerview-animators:$recyclerviewAnimatorsVersion",
        recyclerViewPresenter             : "com.github.kibotu:RecyclerViewPresenter:$recyclerViewPresenterVersion",

        okhttp3                           : "com.squareup.okhttp3:okhttp:$okhttp3Version",
        okhttp3LoggingInterceptor         : "com.squareup.okhttp3:logging-interceptor:$okhttp3Version",
        okhttp3ResponseEcho               : "com.github.simonpercic:oklog3:$okhttp3ResponseEchoVersion",

        tealium                           : "com.tealium:library:$tealiumVersion",
        hawk                              : "com.orhanobut:hawk:$hawkVersion",

        // AWS SDK
        awsIot                            : "com.amazonaws:aws-android-sdk-iot:$awsIotVersion@aar",
        awsClient                         : "com.amazonaws:aws-android-sdk-mobile-client:$awsClientVersion@aar",

        glide                             : "com.github.bumptech.glide:glide:$glideVersion",
        glideAnnotationsProcessor         : "com.github.bumptech.glide:compiler:$glideVersion",
        glideTransformations              : "jp.wasabeef:glide-transformations:$glideTransformationsVersion",

        mosbyMvi                          : "com.hannesdorfmann.mosby3:mvi:$mosbyMviVersion",

        koinAndroid                       : "io.insert-koin:koin-android:$koinVersion",
        koinTestJUnit4                    : "io.insert-koin:koin-test-junit4:$koinVersion",

        retrofit                          : "com.squareup.retrofit2:retrofit:$retrofitVersion",
        retrofitAdapterRxJava2            : "com.squareup.retrofit2:adapter-rxjava2:$retrofitAdapterRxJava2Version",
        retrofitConverterSerialization    : "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$retrofitConverterSerialization",
        retrofitMock                      : "com.squareup.retrofit2:retrofit-mock:$retrofitMockVersion",
        converterScalars                  : "com.squareup.retrofit2:converter-scalars:$converterScalarsVersion",
        converterSimpleXml                : "com.squareup.retrofit2:converter-simplexml:$converterSimpleXmlVersion",

        rx2java                           : "io.reactivex.rxjava2:rxjava:$rx2javaVersion",
        rx2Android                        : "io.reactivex.rxjava2:rxandroid:$rx2AndroidVersion",
        rx2Kotlin                         : "io.reactivex.rxjava2:rxkotlin:$rx2KotlinVersion",

        amazonExoplayer                   : "com.amazon.android:exoplayer:$amazonExoplayerVersion",
        amazonExoplayerImaExtension       : "com.amazon.android:extension-ima:$amazonExoplayerImaExtensionVersion",
        
        youbora                           : "com.nicepeopleatwork:exoplayer-adapter:$youboraVersion",

        leakcanary                        : "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion",

        // exozetCore alternative source   : "com.exozet:core:",
        exozetCore                        : "com.github.exozet:AndroidCore:$exozetCoreVersion",

        logger                            : "com.github.kibotu:StreamingAndroidLogger:$loggerVersion",
        timberLogger                      : "com.jakewharton.timber:timber:$timberLoggerVersion",

        secureStorage                     : "de.adorsys.android:securestoragelibrary:$secureStorageVersion",

        tvProvider                        : "androidx.tvprovider:tvprovider:$tvProviderVVersion",
        workManagerKtx                    : "androidx.work:work-runtime-ktx:$workManagerKtxVersion",
        workManagerRx2                    : "androidx.work:work-rxjava2:$workManagerRx2Version"
]

ext.testLibs = [
        junit                     : "junit:junit:$junitVersion",

        jsonAssert                : "org.skyscreamer:jsonassert:$jsonAssertVersion",
        jsonUnit                  : "net.javacrumbs.json-unit:json-unit:$jsonUnitVersion",
        jsonUnitFluent            : "net.javacrumbs.json-unit:json-unit-fluent:$jsonUnitFluentVersion",
        robolectric               : "org.robolectric:robolectric:$robolectricVersion",
        mockkUnit                 : "io.mockk:mockk:$mockkVersion",
        truth                     : "com.google.truth:truth:$truthVersion",
        jodaTime                  : "joda-time:joda-time:$jodaTimeVersion"
]
ext.androidTestLibs = [

        // Core library
        testCore          : "androidx.test:core:$testCoreVersion",
        coreTesting       : "androidx.arch.core:core-testing:$testingCoreVersion",

        // AndroidJUnitRunner and JUnit Rules
        testRunner        : "androidx.test:runner:$testRunnerVersion",
        testRules         : "androidx.test:rules:$testRulesVersion",

        // workManager - test helpers
        testWorkers       : "androidx.work:work-testing:$workManagerKtxVersion",

        // ui-automator
        uiAutomator       : "androidx.test.uiautomator:uiautomator:$uiAutomatorVersion",

        // Assertions
        testJUnit         : "androidx.test.ext:junit:$testJUnitVersion",
        testJUnitKtx      : "androidx.test.ext:junit-ktx:$testJUnitKtxVersion",
        testTruth         : "androidx.test.ext:truth:$testTruthVersion",
        truth             : "com.google.truth:truth:$truthVersion",

        // Espresso dependencies
        espressoCore          : "androidx.test.espresso:espresso-core:$espressoVersion",

        // mock instrumentation
        mockkInstrumentation  : "io.mockk:mockk-android:$mockkVersion",

        fragmentTesting       : "androidx.fragment:fragment-testing:$fragmentTestingVersion",
]

ext.androidTestUtilLibs = [
        orchestrator     : "androidx.test:orchestrator:$orchestratorVersion",
]
