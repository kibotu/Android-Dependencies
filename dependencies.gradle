ext {
    // refresh gradle dependencies: ./gradlew build --refresh-dependencies

    // sdk and tools
    minSdkVer = 21
    compileSdkVer = 31
    targetSdkVer = 31

    buildToolsVer = '31.0.0'

    // define all versions to facilitate dependency update (=> updating variables here)
    // @see https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib-jdk8
    kotlinVersion = '1.5.30'

    androidGradleBuildToolsVersion = '7.0.2'
    googleGmsVersion = '4.3.10'
    kotlinDokkaVersion = '1.5.0'
    jacocoVersion = '0.8.7'
    kaspressoVersion = '1.3.0'

    // libs
    coreKtxVersion = '1.6.0'
    activityKtxVersion = '1.3.1'
    fragmentKtxVersion = '1.3.6'
    collectionKtxVersion = '1.1.0'
    lifecycleKtxVersion = '2.3.1'

    appCompatVersion = '1.3.1'
    constraintLayoutVersion = '2.1.0'
    gridLayoutVersion = '1.0.0'
    leanbackVersion = '1.0.0'
    materialDesignVersion = '1.4.0'
    recyclerviewVersion = '1.2.1'
    vectorDrawableVersion = '1.1.0'

    recyclerViewPresenterVersion = '5.0.1'
    recyclerviewAnimatorsVersion = '4.0.1'

    koinVersion = '3.1.2'
    mosbyMviVersion = '3.1.1'

    tvProviderVVersion = '1.0.0'
    workManagerKtxVersion = '2.7.1'
    workManagerRx2Version = '2.6.0'

    /**
     * this is the final version for rxJava2
     * no further maintenance
     * would need to migrate to rxJava3
     */
    rx2javaVersion = '2.2.21'
    rx2AndroidVersion = '2.1.1'
    rx2KotlinVersion = '2.4.0'

    firebaseCrashlyticsPluginVersion = '2.7.1'
    firebaseCrashlyticsVersion = '18.2.1'

    // region network versions
    retrofitVersion = '2.9.0'
    retrofitConverterSerializationVersion = '0.8.0'

    kotlinxSerializationVersion = '1.2.2'

    okhttp3Version = '4.9.1'
    okhttp3ResponseEchoVersion = '2.3.0'

    conscryptVersion = '2.5.2'
    // endregion

    amazonExoplayerVersion = '2.16.1'
    amazonExoplayerImaExtensionVersion = '2.16.1'

    // DO NOT UPDATE !
    awsIotVersion = '2.13.3'
    awsClientVersion = '2.13.3'

    youboraVersion = '6.7.33-alpha2'

    glideVersion = '4.12.0'
    glideTransformationsVersion = '4.3.0'

    tealiumVersion = '5.9.1'
    hawkVersion = '2.0.1'
    jodaVersion = '2.10.9.1'
    kotlinDateTimeVersion = '0.3.1'

    loggerVersion = '4.4.4'
    timberLoggerVersion = '5.0.1'

    applicationProviderVersion = '1.0.0'
    resourceExtensionVersion = '1.4.0'
    secureStorageVersion = '1.2.4'

    leakcanaryVersion = '2.8.1'
    detektVersion = '1.18.1'

    // region testLibs versions
    junitVersion = '4.13.2'

    jsonAssertVersion = '1.5.0'
    jsonUnitVersion = '2.28.0'
    jsonUnitFluentVersion = '2.28.0'
    robolectricVersion = '4.6.1'
    mockkVersion = '1.12.0'
    truthVersion = 'c1.0.1'
    jodaTimeVersion = '2.10.10'
    // endregion

    // region androidTestLibs versions
    testCoreVersion = '1.4.0'
    testingCoreVersion = '2.1.0'
    testRunnerVersion = '1.4.0'
    testRulesVersion = '1.4.0'
    testJUnitVersion = '1.1.2'
    testJUnitKtxVersion = '1.1.2'
    testTruthVersion = '1.4.0'
    truthVersion = '1.1.3'
    espressoVersion = '3.4.0'
    idlingConcurrentVersion = '3.3.0'
    fragmentTestingVersion = '1.3.6'
    // endregion

    // androidTestUtilLibs
    orchestratorVersion = '1.4.0'

    desugaringVersion = '1.1.5'

    zxingCoreVersion = '3.3.0'
    zxingAndroidEmbeddedVersion = '4.3.0'

    VERSION_NAME = 0
    LOG_UTILS = false

    major = 1
    minor = 0
    patch = 0

    VSC_PATH = '0'

    isCi = rootProject.hasProperty("CI") || rootProject.hasProperty("ci") || System.getenv().containsKey("CI")
}

ext.plugin = [
        androidGradleBuildTools      : "com.android.tools.build:gradle:$androidGradleBuildToolsVersion",
        kotlinApt                    : "org.jetbrains.kotlin.kapt:org.jetbrains.kotlin.kapt.gradle.plugin:$kotlinVersion",
        kotlinDokka                  : "org.jetbrains.dokka:dokka-gradle-plugin:$kotlinDokkaVersion",
        kotlinGradle                 : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
        kotlinxSerialization         : "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion",
        // static code analysis for kotlin
        detekt                       : "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion",
        firebaseCrashlyticsGradle    : "com.google.firebase:firebase-crashlytics-gradle:$firebaseCrashlyticsPluginVersion",
        // https://developers.google.com/android/guides/google-services-plugin
        gms                          : "com.google.gms:google-services:$googleGmsVersion",
        jacoco                       : "org.jacoco:org.jacoco.core:$jacocoVersion",
        allOpen                      : "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
]

ext.libs = [
        kotlin                          : "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",

        // https://developer.android.com/kotlin/ktx#modules
        coreKtx                         : "androidx.core:core-ktx:$coreKtxVersion",
        fragmentKtx                     : "androidx.fragment:fragment-ktx:$fragmentKtxVersion",
        activityKtx                     : "androidx.activity:activity-ktx:$activityKtxVersion",
        collectionKtx                   : "androidx.collection:collection-ktx:$collectionKtxVersion",

        lifecycleLiveDataKtx            : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleKtxVersion",
        // > java 8 annotation processor:
        lifecycleAnnotationKtx          : "androidx.lifecycle:lifecycle-compiler:$lifecycleKtxVersion",
        // java 8 annotation processor:
        lifecycleCommonJava8            : "androidx.lifecycle:lifecycle-common-java8:$lifecycleKtxVersion",

        appCompat                       : "androidx.appcompat:appcompat:$appCompatVersion",
        appCompatResources              : "androidx.appcompat:appcompat-resources:$appCompatVersion",

        constraintLayout                : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
        gridLayout                      : "androidx.gridlayout:gridlayout:$gridLayoutVersion",
        leanback                        : "androidx.leanback:leanback:$leanbackVersion",
        materialDesign                  : "com.google.android.material:material:$materialDesignVersion",
        recyclerView                    : "androidx.recyclerview:recyclerview:$recyclerviewVersion",
        vectorDrawable                  : "androidx.vectordrawable:vectordrawable:$vectorDrawableVersion",

        recyclerviewAnimators           : "jp.wasabeef:recyclerview-animators:$recyclerviewAnimatorsVersion",
        recyclerViewPresenter           : "com.github.kibotu:RecyclerViewPresenter:$recyclerViewPresenterVersion",

        koinAndroid                     : "io.insert-koin:koin-android:$koinVersion",

        mosbyMvi                        : "com.hannesdorfmann.mosby3:mvi:$mosbyMviVersion",

        // atv channels
        tvProvider                      : "androidx.tvprovider:tvprovider:$tvProviderVVersion",
        workManagerKtx                  : "androidx.work:work-runtime-ktx:$workManagerKtxVersion",
        workManagerRx2                  : "androidx.work:work-rxjava2:$workManagerRx2Version",

        rx2java                         : "io.reactivex.rxjava2:rxjava:$rx2javaVersion",
        rx2Android                      : "io.reactivex.rxjava2:rxandroid:$rx2AndroidVersion",
        rx2Kotlin                       : "io.reactivex.rxjava2:rxkotlin:$rx2KotlinVersion",

        firebaseCrashlytics             : "com.google.firebase:firebase-crashlytics:$firebaseCrashlyticsVersion",

        // region network
        retrofit                        : "com.squareup.retrofit2:retrofit:$retrofitVersion",
        retrofitAdapterRxJava2          : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
        retrofitConverterScalars        : "com.squareup.retrofit2:converter-scalars:$retrofitVersion",
        retrofitConverterSerialization  : "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$retrofitConverterSerializationVersion",
        retrofitConverterSimpleXml      : "com.squareup.retrofit2:converter-simplexml:$retrofitVersion",
        retrofitMock                    : "com.squareup.retrofit2:retrofit-mock:$retrofitVersion",

        okhttp3                         : "com.squareup.okhttp3:okhttp:$okhttp3Version",
        okhttp3LoggingInterceptor       : "com.squareup.okhttp3:logging-interceptor:$okhttp3Version",
        okhttp3ResponseEcho             : "com.github.simonpercic:oklog3:$okhttp3ResponseEchoVersion",

        kotlinxSerializationJson        : "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerializationVersion",

        conscrypt                       : "org.conscrypt:conscrypt-android:$conscryptVersion",
        // endregion

        amazonExoplayer                 : "com.amazon.android:exoplayer:$amazonExoplayerVersion",
        amazonExoplayerImaExtension     : "com.amazon.android:extension-ima:$amazonExoplayerImaExtensionVersion",

        youbora                         : "com.nicepeopleatwork:exoplayer-adapter:$youboraVersion",

        // AWS SDK
        awsIot                          : "com.amazonaws:aws-android-sdk-iot:$awsIotVersion@aar",
        awsClient                       : "com.amazonaws:aws-android-sdk-mobile-client:$awsClientVersion@aar",

        glide                           : "com.github.bumptech.glide:glide:$glideVersion",
        glideAnnotationsProcessor       : "com.github.bumptech.glide:compiler:$glideVersion",
        glideTransformations            : "jp.wasabeef:glide-transformations:$glideTransformationsVersion",

        logger                          : "com.github.kibotu:StreamingAndroidLogger:$loggerVersion",
        timberLogger                    : "com.jakewharton.timber:timber:$timberLoggerVersion",

        // applicationProvider = dependency for resourceExtension
        applicationProvider             : "com.github.florent37:applicationprovider:$applicationProviderVersion",
        resourceExtension               : "com.github.kibotu:AndroidResourceExtensions:$resourceExtensionVersion",
        secureStorage                   : "de.adorsys.android:securestoragelibrary:$secureStorageVersion",

        tealium                         : "com.tealium:library:$tealiumVersion",
        hawk                            : "com.orhanobut:hawk:$hawkVersion",
        joda                            : "net.danlew:android.joda:$jodaVersion",
        kotlinDateTime                  : "org.jetbrains.kotlinx:kotlinx-datetime:$kotlinDateTimeVersion",

        leakcanary                      : "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion",

        coreLibraryDesugaring           : "com.android.tools:desugar_jdk_libs:$desugaringVersion",

        zxingAndroidEmbedded            : "com.journeyapps:zxing-android-embedded:$zxingAndroidEmbeddedVersion",
        zxingCore                       : "com.google.zxing:core:$zxingCoreVersion"
]

ext.testLibs = [
        junit                 : "junit:junit:$junitVersion",
        jsonAssert            : "org.skyscreamer:jsonassert:$jsonAssertVersion",
        jsonUnit              : "net.javacrumbs.json-unit:json-unit:$jsonUnitVersion",
        jsonUnitFluent        : "net.javacrumbs.json-unit:json-unit-fluent:$jsonUnitFluentVersion",
        robolectric           : "org.robolectric:robolectric:$robolectricVersion",
        mockkUnit             : "io.mockk:mockk:$mockkVersion",
        truth                 : "com.google.truth:truth:$truthVersion",
        jodaTime              : "joda-time:joda-time:$jodaTimeVersion",
        koinTestJUnit4        : "io.insert-koin:koin-test-junit4:$koinVersion",
]
ext.androidTestLibs = [

        // Core library
        testCore              : "androidx.test:core:$testCoreVersion",
        // test helpers for liveData
        coreTesting           : "androidx.arch.core:core-testing:$testingCoreVersion",

        // AndroidJUnitRunner and JUnit Rules
        testRunner            : "androidx.test:runner:$testRunnerVersion",
        testRules             : "androidx.test:rules:$testRulesVersion",

        koin                  : "io.insert-koin:koin-test:$koinVersion",

        // workManager - test helpers
        testWorkers           : "androidx.work:work-testing:$workManagerKtxVersion",

        // wraps espresso and uiAutomator
        kaspresso             : "com.kaspersky.android-components:kaspresso:$kaspressoVersion",
        kaspressoAllureSupport: "com.kaspersky.android-components:kaspresso-allure-support:$kaspressoVersion",

        // Assertions
        testJUnit             : "androidx.test.ext:junit:$testJUnitVersion",
        testJUnitKtx          : "androidx.test.ext:junit-ktx:$testJUnitKtxVersion",
        testTruth             : "androidx.test.ext:truth:$testTruthVersion",
        googleTruth           : "com.google.truth:truth:$truthVersion",

        // Espresso dependencies
        espressoCore          : "androidx.test.espresso:espresso-core:$espressoVersion",

        // mock instrumentation
        mockkInstrumentation  : "io.mockk:mockk-android:$mockkVersion",

        fragmentTesting       : "androidx.fragment:fragment-testing:$fragmentTestingVersion",
]

ext.androidTestUtilLibs = [
        orchestrator : "androidx.test:orchestrator:$orchestratorVersion",
]
